API-1: Get relevant packages given english text as input
ENDPOINT: [POST] /api/v1/user-intent
INPUT: (STRING) English sentence with tags @vertex @web 
OUTPUT: (JSON) [{
    "code_metrics": {},
        "ecosystem": STRING,
        "github": {
            "contributors": INTEGER,
            "dependent_projects": STRING NUMBER,
            "dependent_repos": STRING NUMBER,
            "first_release_date": DATE,
            "forks_count": INTEGER,
            "issues": {
                "month": {
                    "closed": INTEGER,
                    "opened": INTEGER
                },
                "year": {
                    "closed": INTEGER
                        "opened": INTEGER
                }
            },
            "latest_release_duration": DATE,
            "open_issues_count": INTEGER,
            "pull_requests": {
                "month": {
                    "closed": INTEGER,
                    "opened": INTEGER
                },
                "year": {
                    "closed": INTEGER,
                    "opened": INTEGER
                }
            },
            "size": STRING,
            "stargazers_count": INTEGER,
            "total_releases": STRING NUMBER,
            "used_by": [
            {
                "name": Repository/Name,
                "stars": INTEGER
            },
            {
                "name": Repository/Name,
                "stars": INTEGER
            },
                        .
                        .
                        .
            {
                "name": Repository/Name,
                "stars": INTEGER
            }
            ]
        },
        "latest_version": STRING,
        "license_analysis": {
            "_message": STRING,
            "_representative_licenses": STRING,
            "conflict_licenses": [STRINGS],
            "outlier_licenses": [STRINGS],
            "status": STRING,
            "synonyms": {},
            "unknown_licenses": [STRINGS]
        },
        "licenses": [STRINGS],
        "name": STRING,
        "osio_user_count": [INTEGERS],
        "security": [],
        "topic_list": [STRINGS],
        "version": STRING}, . . .
        ]

API-2: Get relevant packages given a tag as input
ENDPOINT: [GET] /api/v1/package-recommendation/<tag>
INPUT: NONE
OUTPUT: (JSON) [{
    "code_metrics": {},
        "ecosystem": STRING,
        "github": {
            "contributors": INTEGER,
            "dependent_projects": STRING NUMBER,
            "dependent_repos": STRING NUMBER,
            "first_release_date": DATE,
            "forks_count": INTEGER,
            "issues": {
                "month": {
                    "closed": INTEGER,
                    "opened": INTEGER
                },
                "year": {
                    "closed": INTEGER
                        "opened": INTEGER
                }
            },
            "latest_release_duration": DATE,
            "open_issues_count": INTEGER,
            "pull_requests": {
                "month": {
                    "closed": INTEGER,
                    "opened": INTEGER
                },
                "year": {
                    "closed": INTEGER,
                    "opened": INTEGER
                }
            },
            "size": STRING,
            "stargazers_count": INTEGER,
            "total_releases": STRING NUMBER,
            "used_by": [
            {
                "name": Repository/Name,
                "stars": INTEGER
            },
            {
                "name": Repository/Name,
                "stars": INTEGER
            },
                        .
                        .
                        .
            {
                "name": Repository/Name,
                "stars": INTEGER
            }
            ]
        },
        "latest_version": STRING,
        "license_analysis": {
            "_message": STRING,
            "_representative_licenses": STRING,
            "conflict_licenses": [STRINGS],
            "outlier_licenses": [STRINGS],
            "status": STRING,
            "synonyms": {},
            "unknown_licenses": [STRINGS]
        },
        "licenses": [STRINGS],
        "name": STRING,
        "osio_user_count": [INTEGERS],
        "security": [],
        "topic_list": [STRINGS],
        "version": STRING}, . . .
        ]

API-3: Check if the dependency is valid
ENDPOINT: [POST] /api/v1/dependency-validation
INPUT: (JSON) 
        { 
            "ecosystem": STRING,
            "packages": [PACKAGE_1, PACKAGE_2... PACKAGE_N]
        }
OUTPUT: 
        If all dependencies is not valid:
            (JSON) [
                {
                    PACKAGE_1: valid/invalid,
                    PACKAGE_2: valid/invalid,
                    ...
                    PACKAGE_N: valid/invalid
                }
            ]
        Else
            (STRING) pom.xml
